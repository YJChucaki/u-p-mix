
using ApproxOperator, Tensors,  LinearAlgebra, Printf
include("import_heat_conduction.jl")
include("wirteVTK.jl")
# for i=2:10
   
ndiv = 5
ndiv_u = 3
# n·µ§ = 5

# elements, nodes, nodes_u = import_patchtest_mix("./msh/patchtest_"*string(ndiv)*".msh","./msh/patchtest_bubble_"*string(n·µ§)*".msh")
elements, nodes, nodes_u = import_patchtest_mix("./msh/patchtest_quad_"*string(ndiv)*".msh","./msh/patchtest_quad_"*string(ndiv_u)*".msh")
n‚Çö = length(nodes)
n·µ§ = length(nodes_u)


setùù≠!(elements["Œ©·µò"])
setùù≠!(elements["‚àÇŒ©·µò"])
setùù≠!(elements["Œì·µò"])
set‚àáùù≠!(elements["Œ©·µñ"])
setùù≠!(elements["‚àÇŒ©·µñ"])
setùù≠!(elements["Œì·µñ"])
D=1   #thermal conductivity coefficient
t=1 #thickness

n =1
T(x,y) = (x+y)^n
‚àÇT‚àÇx(x,y) = n*(x+y)^abs(n-1)
‚àÇT‚àÇy(x,y) = n*(x+y)^abs(n-1)
P‚ÇÅ(x,y) = -‚àÇT‚àÇx(x,y)
P‚ÇÇ(x,y) = -‚àÇT‚àÇy(x,y)
‚àÇ¬≤T‚àÇx¬≤(x,y)  = n*(n-1)*(x+y)^abs(n-2)
‚àÇ¬≤T‚àÇy¬≤(x,y) = n*(n-1)*(x+y)^abs(n-2)
b(x,y) = -D*(‚àÇ¬≤T‚àÇx¬≤(x,y)+‚àÇ¬≤T‚àÇy¬≤(x,y‚àÇ¬≤T‚àÇx¬≤(x,y)+‚àÇ¬≤T‚àÇy¬≤(x,y))

eval(prescribe)
prescribe!(elements["‚àÇŒ©·µò"],:g=>(x,y,z)->0.0)

ops = [
       Operator{:‚à´T·µ¢h·µ¢ds}(:t=>t),
       Operator{:‚à´T·µ¢g·µ¢ds}(:Œ±=>1e12*D,:t=>t),
       Operator{:‚à´vbdŒ©}(),
       Operator{:L‚ÇÇ}(),
       Operator{:L‚ÇÇ_heat_flux}(),
]
ops·µõ = [
    Operator{:‚à´‚à´‚àáùíëudxdy}(),
    Operator{:‚à´p·µ¢n·µ¢uds}(),
    Operator{:‚à´p·µ¢n·µ¢g‚±ºds}(),
]
ops·µà = [
    Operator{:‚à´‚à´p·µ¢D‚Åª¬πp‚±ºdxdy}(:D=>D,:t=>t),
]

k‚Çö‚Çö = zeros(2*n‚Çö,2*n‚Çö)
k‚Çö‚Çô = zeros(2*n‚Çö,n·µ§)
k‚Çö·µ§ = zeros(2*n‚Çö,n·µ§)
k·µ§·µ§ = zeros(n·µ§,n·µ§)
f·µ§ = zeros(n·µ§)
f‚Çö = zeros(2*n‚Çö)


ops·µà[1](elements["Œ©·µñ"],k‚Çö‚Çö)
ops·µõ[1](elements["Œ©·µñ"],elements["Œ©·µò"],k‚Çö·µ§)
ops·µõ[2](elements["‚àÇŒ©·µñ"],elements["‚àÇŒ©·µò"],k‚Çö·µ§)
# ops·µõ[2](elements["Œì·µñ"],elements["Œì·µò"],k‚Çö·µ§)
ops·µõ[3](elements["Œì·µñ"],elements["Œì·µò"],k‚Çö‚Çô,f‚Çö)
ops[3](elements["Œ©·µò"],f·µ§)

# k‚Çö·µ§ = k‚Çö·µ§+k‚Çö‚Çô
# k·µà = k‚Çö‚Çö
# k·µõ = k‚Çö·µ§*(k·µ§·µ§\(-k‚Çö·µ§'))
# v·µà = eigvals(k·µà)
# v·µõ = eigvals(k·µõ)
# v = eigvals(k·µõ,k·µà)
# Œ≥ = eigvals(k·µõ,k·µà)
# println(Œ≥[2*n·µ§-n‚Çö+1])


k = [k‚Çö‚Çö -k‚Çö·µ§-k‚Çö‚Çô;-k‚Çö·µ§'-k‚Çö‚Çô' k·µ§·µ§]

# k = [k‚Çö‚Çö -k‚Çö·µ§;-k‚Çö·µ§' k·µ§·µ§]
f = [-f‚Çö;-f·µ§]
d = k\f
p‚ÇÅ = d[1:2:2*n‚Çö] 
p‚ÇÇ = d[2:2:2*n‚Çö]
u  = d[2*n‚Çö+1:end]

push!(nodes,:d‚ÇÅ=>p‚ÇÅ,:d‚ÇÇ=>p‚ÇÇ)
push!(nodes_u,:d=>u)


setùù≠!(elements["Œ©·µç·µò"])
setùù≠!(elements["Œ©·µç·µñ"])
l2_u= ops[4](elements["Œ©·µç·µò"])
l2_p= ops[5](elements["Œ©·µç·µñ"])
L2_u = log10(l2_u)
L2_p = log10(l2_p)

           
println(L2_u)
println(L2_p)

# eval(VTK_mix_pressure)

d‚Çö·µ§ = zeros(2*n‚Çö + n·µ§)
d‚Çö = zeros(2*n‚Çö)
d·µ§ = zeros(n·µ§)
for (i,node) in enumerate(nodes)
    x = node.x
    y = node.y
    d‚Çö·µ§[2*i-1] = -‚àÇT‚àÇx(x,y)
    d‚Çö·µ§[2*i]   = -‚àÇT‚àÇy(x,y)
    d‚Çö[2*i-1] = -‚àÇT‚àÇx(x,y)
    d‚Çö[2*i]   = -‚àÇT‚àÇy(x,y)
end
for (i,node) in enumerate(nodes_u)
    x = node.x
    y = node.y
    d‚Çö·µ§[2*n‚Çö+i] = T(x,y)
    d·µ§[i] = T(x,y)
end

err1 = k‚Çö‚Çö*d‚Çö - k‚Çö·µ§*d·µ§
err2 = k‚Çö‚Çô*d·µ§ - f‚Çö
err3 = (k‚Çö·µ§+k‚Çö‚Çô)'*d‚Çö-f·µ§
err4 = k‚Çö‚Çö*d‚Çö - (k‚Çö·µ§+k‚Çö‚Çô)*d·µ§ + f‚Çö
err5 = k*d‚Çö·µ§-f
err6 = k*d-f
