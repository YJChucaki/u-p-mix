
using ApproxOperator, Tensors,  LinearAlgebra, Printf
include("import_heat_conduction.jl")
include("wirteVTK.jl")
# for i=2:10
   
ndiv =5
n‚Çö = 15
# println(n‚Çö)
elements,nodes,nodes_p = import_patchtest_mix("./msh/patchtest_"*string(ndiv)*".msh","./msh/patchtest_bubble_"*string(n‚Çö)*".msh")

n‚Çö = length(nodes)
n·µ§ = length(nodes_p)
# n‚Çë = length(elements["Œ©"])
# n‚Çë‚Çö = length(Œ©)


set‚àáùù≠!(elements["Œ©·µò"])
set‚àáùù≠!(elements["Œ©·µñ"])
setùù≠!(elements["Œì·µñ"])
set‚àáùù≠!(elements["Œì·µò"])
D=1   #thermal conductivity coefficient
t=1 #thickness

n =1
T(x,y) = (x+y)^n
‚àÇT‚àÇx(x,y) = n*(x+y)^abs(n-1)
‚àÇT‚àÇy(x,y) = n*(x+y)^abs(n-1)
‚àÇ¬≤T‚àÇx¬≤(x,y)  = n*(n-1)*(x+y)^abs(n-2)
‚àÇ¬≤T‚àÇy¬≤(x,y) = n*(n-1)*(x+y)^abs(n-2)
s(x,y) = -D*(‚àÇ¬≤T‚àÇx¬≤(x,y)+‚àÇ¬≤T‚àÇy¬≤(x,y))

eval(prescribe)

ops = [
       Operator{:‚à´T·µ¢h·µ¢ds}(:t=>t),
       Operator{:‚à´T·µ¢g·µ¢ds}(:Œ±=>1e12*D,:t=>t),
       Operator{:‚à´‚à´T·µ¢s·µ¢dxdy}(:t=>t),
       Operator{:T_error}(:D=>D,:t=>t),
]
ops·µõ = [
    Operator{:‚à´‚à´q·µ¢‚àáT‚±ºdxdy}(:t=>t),
    Operator{:‚à´q·µ¢n·µ¢g‚±ºds}(:t=>t),
]
ops·µà = [
    Operator{:‚à´‚à´q·µ¢D‚Åª¬πq‚±ºdxdy}(:D=>D,:t=>t),
]

k·µÖ = zeros(n·µ§,n·µ§)
f·µÖ = zeros(n·µ§)
k·µ§·µ§ = zeros(2*n‚Çö,2*n‚Çö)
k‚Çö‚Çô = zeros(2*n‚Çö,n·µ§)
k‚Çö·µ§ = zeros(n·µ§,2*n‚Çö)
k‚Çö‚Çö = zeros(n·µ§,n·µ§)
f = zeros(n·µ§)
f‚Çö = zeros(2*n‚Çö)


ops·µà[1](elements["Œ©·µñ"],k·µ§·µ§)
ops·µõ[1](elements["Œ©·µñ"],elements["Œ©·µò"],k‚Çö·µ§)
ops·µõ[2](elements["Œì·µñ"],elements["Œì·µò"],k‚Çö‚Çô,f‚Çö)

ops[3](elements["Œ©·µò"],f)
# k‚Çö·µ§‚Åª=k‚Çö·µ§'*inv(k‚Çö·µ§*k‚Çö·µ§')
# k‚Çê=-k·µ§·µ§*k‚Çö·µ§‚Åª
# k=(k‚Çê'*inv(k‚Çê*k‚Çê'))*(k‚Çö·µ§')
# ops[2](elements["Œì·µò"],k·µÖ,f·µÖ)
#  q = (k+k·µÖ)\(f+f·µÖ) #temperatures


# k = [k·µ§·µ§ (k‚Çö·µ§+k·µÖ)';k‚Çö·µ§+k·µÖ k‚Çö‚Çö]
k = [k·µ§·µ§ -k‚Çö·µ§'+k‚Çö‚Çô;-k‚Çö·µ§-k‚Çö‚Çô' k‚Çö‚Çö]
f = [f‚Çö;f]
d = k\f
p‚ÇÅ = d[1:2:2*n‚Çö] ##heat flux
p‚ÇÇ = d[2:2:2*n‚Çö]
u  = d[2*n‚Çö+1:end]

push!(nodes,:d‚ÇÅ=>p‚ÇÅ,:d‚ÇÇ=>p‚ÇÇ)
push!(nodes_p,:T=>u)


setùù≠!(elements["Œ©·µç·µò"])
l2= ops[4](elements["Œ©·µç·µò"])
# h1,l2,h1_dil,h1_dev= ops[5](elements["Œ©·µç"],elements["Œ©·µç·µñ"])
L2 = log10(l2)
# H1 = log10(h1)
# H1_dil = log10(h1_dil)
# H1_dev = log10(h1_dev)
           
println(L2)

# eval(VTK_mix_pressure)


